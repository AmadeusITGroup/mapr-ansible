---
# Install HBase REST
- name: Install mapr-hbase-rest
  package: name=mapr-hbase-rest state=present
# Install HBase Thrift
- name: Install mapr-hbasethrift
  package: name=mapr-hbasethrift state=present

# Other actions
- name: Find HBase Path
  find: paths="/opt/mapr/hbase/" patterns="hbase*" file_type=directory
  register: hbase_path_result
  failed_when: hbase_path_result.matched != 1
- debug: msg="HBase Path {{ hbase_path_result.files[0].path }}"
- name: Configure hbase-site.xml - unsecure
  template: src=hbase-site.unsecure.xml dest={{ hbase_path_result.files[0].path }}/conf/hbase-site.xml
  when: hbase_thrift_rest_security == 'none'
- name: Configure hbase-site.xml - maprsasl_and_ssl
  template: src=hbase-site.maprsasl_and_ssl.xml dest={{ hbase_path_result.files[0].path }}/conf/hbase-site.xml
  when: hbase_thrift_rest_security == 'maprsasl_and_ssl'
- name: Configure hbase-site.xml - maprsasl
  template: src=hbase-site.maprsasl.xml dest={{ hbase_path_result.files[0].path }}/conf/hbase-site.xml
  when: hbase_thrift_rest_security == 'maprsasl'
- name: Configure hbase-site.xml - kerberos
  template: src=hbase-site.kerberos.xml dest={{ hbase_path_result.files[0].path }}/conf/hbase-site.xml
  when: hbase_thrift_rest_security == 'kerberos'
- name: Set MAPR_HBASE_SERVER_OPTS using HYBRID_LOGIN_OPTS
  lineinfile: >
    dest=/opt/mapr/conf/env.sh
    line="export MAPR_HBASE_SERVER_OPTS=\"${HYBRID_LOGIN_OPTS} ${MAPR_SSL_OPTS} -Dmapr.library.flatclass\""
    regexp="^export MAPR_HBASE_SERVER_OPTS"
  when: hbase_thrift_rest_security != 'none'
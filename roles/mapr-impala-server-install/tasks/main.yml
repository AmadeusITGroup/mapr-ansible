---
# Install mapr-impala-catalog
- name: Install mapr-impala-server
  package: name=mapr-impala-server state=present
  register: impala_result

- find: paths="/opt/mapr/impala/" patterns="impala*" file_type=directory
  register: impala_path_result
  failed_when: impala_path_result.matched != 1

- name: Set IMPALA_STATE_STORE_HOST in env.sh
  lineinfile: dest={{ impala_path_result.files[0].path }}/conf/env.sh regexp="^IMPALA_STATE_STORE_HOST=" line="IMPALA_STATE_STORE_HOST={{ impala_statestore_string }}"
- name: Set CATALOG_SERVICE_HOST in env.sh
  lineinfile: dest={{ impala_path_result.files[0].path }}/conf/env.sh regexp="^CATALOG_SERVICE_HOST=" line="CATALOG_SERVICE_HOST={{ impala_catalog_string }}"
- name: Set HIVE_METASTORE_URI in env.sh
  lineinfile: dest={{ impala_path_result.files[0].path }}/conf/env.sh regexp="^HIVE_METASTORE_URI=" line="HIVE_METASTORE_URI={{ impala_hive_metastore_string }}"

- name: Configure.sh -R
  shell: /opt/mapr/server/configure.sh -R
  when: impala_result.changed
- pause: seconds=10
  when: impala_result.changed
- name: Restart Impala Server
  shell: maprcli node services -name impalaserver -action restart -nodes {{ ansible_fqdn }}
  register: task_result
  until: task_result.rc == 0
  retries: 10
  delay: 10
  ignore_errors: yes
  environment:
    MAPR_TICKETFILE_LOCATION: /opt/mapr/conf/mapruserticket
  when: impala_result.changed